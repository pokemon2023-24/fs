//Q1] Create a node.js file that Select all records from the "students" table, and display the result object on console.

// Require the mysql package
const mysql = require('mysql');

// Create a connection to the MySQL database
const connection = mysql.createConnection({
  host: 'localhost', // Change this to your MySQL server hostname
  user: 'username', // Change this to your MySQL username
  password: 'password', // Change this to your MySQL password
  database: 'your_database_name' // Change this to your MySQL database name
});

// Connect to the database
connection.connect((err) => {
  if (err) {
    console.error('Error connecting to database:', err);
    return;
  }
  console.log('Connected to database');
});

// Perform a query to select all records from the "students" table
connection.query('SELECT * FROM students', (err, results) => {
  if (err) {
    console.error('Error querying database:', err);
    return;
  }
  
  // Display the result object on the console
  console.log('Result:', results);

  // Close the connection to the database
  connection.end();
});

--------------------------------------------------------------------------------------------------------------------------------------------------------------
//Q.2] Create an HTML form for Employee and write a JavaScript to validate name, email ID, mobile number, department, joining date using Regular Expression.

<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<title>Employee Form</title>
<style>
  .error {
    color: red;
  }
</style>
</head>
<body>

<h2>Employee Form</h2>
<form id="employeeForm" onsubmit="return validateForm()">
  <label for="name">Name:</label><br>
  <input type="text" id="name" name="name"><br>
  <span id="nameError" class="error"></span><br>

  <label for="email">Email:</label><br>
  <input type="email" id="email" name="email"><br>
  <span id="emailError" class="error"></span><br>

  <label for="mobile">Mobile Number:</label><br>
  <input type="text" id="mobile" name="mobile"><br>
  <span id="mobileError" class="error"></span><br>

  <label for="department">Department:</label><br>
  <input type="text" id="department" name="department"><br>
  <span id="departmentError" class="error"></span><br>

  <label for="joiningDate">Joining Date:</label><br>
  <input type="text" id="joiningDate" name="joiningDate" placeholder="YYYY-MM-DD"><br>
  <span id="joiningDateError" class="error"></span><br>

  <input type="submit" value="Submit">
</form>

<script>
function validateForm() {
  // Regex patterns
  const namePattern = /^[a-zA-Z\s]+$/;
  const emailPattern = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  const mobilePattern = /^\d{10}$/;
  const datePattern = /^\d{4}-\d{2}-\d{2}$/;

  // Fetching input values
  const name = document.getElementById('name').value.trim();
  const email = document.getElementById('email').value.trim();
  const mobile = document.getElementById('mobile').value.trim();
  const department = document.getElementById('department').value.trim();
  const joiningDate = document.getElementById('joiningDate').value.trim();

  // Error messages
  let errors = {};

  if (!namePattern.test(name)) {
    errors.name = "Invalid name format";
  }

  if (!emailPattern.test(email)) {
    errors.email = "Invalid email format";
  }

  if (!mobilePattern.test(mobile)) {
    errors.mobile = "Invalid mobile number format";
  }

  if (department === "") {
    errors.department = "Department cannot be empty";
  }

  if (!datePattern.test(joiningDate)) {
    errors.joiningDate = "Invalid date format (YYYY-MM-DD)";
  }

  // Displaying errors
  for (let key in errors) {
    document.getElementById(key + "Error").innerHTML = errors[key];
  }

  // If there are errors, prevent form submission
  if (Object.keys(errors).length > 0) {
    return false;
  }
  
  return true;
}
</script>

</body>
</html>
