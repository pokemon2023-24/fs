Q1 Create a Node.js file that demonstrate create Movie database and table in MySQL
// app.js

const mysql = require('mysql');

// Create a connection to the MySQL database
const connection = mysql.createConnection({
  host: 'localhost',
  user: 'your_username',
  password: 'your_password',
  database: 'your_database_name'
});

// Connect to the database
connection.connect((err) => {
  if (err) throw err;
  console.log('Connected to MySQL database');

  // Create the movie table
  const createTableQuery = `
    CREATE TABLE IF NOT EXISTS movies (
      id INT AUTO_INCREMENT PRIMARY KEY,
      title VARCHAR(255) NOT NULL,
      director VARCHAR(255),
      release_year INT
    )
  `;

  connection.query(createTableQuery, (err, result) => {
    if (err) throw err;
    console.log('Movie table created successfully');
    // Insert some sample data into the table
    const insertDataQuery = `
      INSERT INTO movies (title, director, release_year)
      VALUES 
        ('The Shawshank Redemption', 'Frank Darabont', 1994),
        ('The Godfather', 'Francis Ford Coppola', 1972),
        ('The Dark Knight', 'Christopher Nolan', 2008)
    `;
    connection.query(insertDataQuery, (err, result) => {
      if (err) throw err;
      console.log('Sample data inserted into the movie table');
      // Close the connection
      connection.end();
    });
  });
});

--------------------------------------------------------------------------------------------------------------------------------
Q2 ) Write node js application that transfer a file as an attachment on web and enables browser to
prompt the user to download file using express js.

// Importing required modules
const express = require('express');
const fs = require('fs');
const path = require('path');

// Create Express application
const app = express();

// Define route to serve file as an attachment
app.get('/download', (req, res) => {
    const filePath = path.join(__dirname, 'Aditya.txt'); // Path to the file to be served
    const fileName = 'example.txt'; // Name of the file as seen by the user

    // Set headers to specify attachment and filename
    res.setHeader('Content-Disposition', 'attachment; filename=' + fileName);
    
    // Serve the file
    const fileStream = fs.createReadStream(filePath);
    fileStream.pipe(res);
});

// Start the server
const PORT = 3000;
app.listen(PORT, () => {
    console.log(`Server is running on http://localhost:${PORT}`);
});
